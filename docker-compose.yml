services:
  db_main:
    image: postgres:14.17
    container_name: zap-postgres-main
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${POSTGRES_DB_MAIN}"
      POSTGRES_USER: "${POSTGRES_USER_MAIN}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_MAIN}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_main_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 5s
      retries: 5

  db_bank:
    image: postgres:14.17
    container_name: zap-postgres-bank
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${POSTGRES_DB_BANK}"
      POSTGRES_USER: "${POSTGRES_USER_BANK}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD_BANK}"
    ports:
      - "5433:5432"
    volumes:
      - postgres_bank_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 5s
      retries: 5

  mercure:
    image: dunglas/mercure:v0.18
    container_name: zap-mercure
    restart: unless-stopped
    environment:
      # Uncomment the following line to disable HTTPS
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: "${FIELD_ENCRYPTION_KEY}"
      MERCURE_SUBSCRIBER_JWT_KEY: "${FIELD_ENCRYPTION_KEY}"
    # Uncomment the following line to enable the development mode
    # command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "https://localhost/healthz"]
      timeout: 10s
      retries: 5
      start_period: 60s
    ports:
      - "3000:80"
    volumes:
      - mercure_data:/data
      - mercure_config:/config

  backend:
    container_name: zap-backend
    build:
      context: backend_main
      dockerfile: Dockerfile
    depends_on:
      db_main:
        condition: service_healthy
      mercure:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      -.env
    environment:
      MERCURE_URL: "http://mercure:80/.well-known/mercure"
      POSTGRES_HOST: "db_main"
      POSTGRES_PORT: "5432"
      DEBUG: False
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 5


volumes:
  postgres_main_data:
  postgres_bank_data:
  mercure_data:
  mercure_config:
